import client from"../feathers.js";import{asyncMessageListener,handleRuntimeError,logger}from"../helpers.js";import{autosaveMessageHandler}from"./autosave-handler.js";import{commandMessageHandler}from"./command-handler.js";import{contextMenuMessageHandler}from"./context-menu-handler.js";import{syncOptions}from"./options-messenger.js";import{stylesMessageHandler,syncStyles}from"./style-messenger.js";const initMessagingHandler=()=>{chrome.runtime.onConnect.addListener(e=>{handleRuntimeError(),autosaveMessageHandler(e),commandMessageHandler(e)}),chrome.runtime.onMessage.addListener(asyncMessageListener(async(e,s,n)=>{handleRuntimeError(),await stylesMessageHandler(e,s,n)||await contextMenuMessageHandler(e,s,n)||n()})),chrome.runtime.onMessageExternal.addListener(asyncMessageListener(async(e,s,n)=>{var a;handleRuntimeError(),e.hello?n("hi"):(e.accessToken&&(logger.log("info","update access token",e),a=e.accessToken,client.setJWT(a),chrome.storage.local.set({apiAccessToken:a}),chrome.storage.sync.set({___extension__flags_has_logged_in:!0}),await syncOptions(),await syncStyles()),e.logout&&(client.removeJWT(),chrome.storage.local.remove("apiAccessToken")),e.serviceEvent&&chrome.storage.sync.set(e.serviceEvent),n()),handleRuntimeError()}))};export{initMessagingHandler};