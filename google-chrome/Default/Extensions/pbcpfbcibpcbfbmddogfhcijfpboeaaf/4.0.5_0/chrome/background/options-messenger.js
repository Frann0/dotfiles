import{OPTIONS_KEY_PREFIX}from"../../constants.js";import{optionsService}from"../feathers.js";import{setIconState}from"./icon-state-handler.js";import{setContextMenu}from"./context-menu-handler.js";import{setBrowserAction}from"./command-handler.js";import{hideStyles,showStyles}from"./style-messenger.js";import{logger}from"../helpers.js";const syncOptions=async()=>{var e=await optionsService.find().then(e=>e?.data?.[0]||{});return updateOptions(e._id,e)},persistOptionsChanges=e=>{logger.log("debug","persistig options changes",e),setBrowserAction(e.popout||!1),setContextMenu(),(!0===e.disabled?(setIconState(!0),hideStyles):(setIconState(),showStyles))()},updateOptions=async(e,t)=>(logger.setMode(t.logMode),await chrome.storage.local.set({[OPTIONS_KEY_PREFIX]:JSON.stringify(t)}),t),initOptionsMessenger=async()=>{logger.log("debug","initOptionsMessenger"),setContextMenu(),optionsService.on("patched",updateOptions),syncOptions()},optionsStorageHandler=async(e,t)=>{if("local"===t)for(var o in e)o.match(""+OPTIONS_KEY_PREFIX)&&(logger.log("debug","options cache updated"),persistOptionsChanges(JSON.parse(e[o].newValue)))},getOptions=async()=>{var e=await chrome.storage.local.get([OPTIONS_KEY_PREFIX]);return JSON.parse(e?.[OPTIONS_KEY_PREFIX]||"{}")};export{initOptionsMessenger,optionsStorageHandler,getOptions,syncOptions};