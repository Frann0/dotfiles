import{handleRuntimeError,logger}from"../helpers.js";import{iconStateListener}from"./icon-state-handler.js";import{injectContentScripts}from"./install-handler.js";import{stylesTabsOnActivatedHandler,stylesTabsOnUpdatedHandler}from"./style-messenger.js";const tabOnActivatedListener=e=>{try{handleRuntimeError(),iconStateListener(),stylesTabsOnActivatedHandler(e)}catch(e){logger.log("warn","tabs.onActivated",e.message)}},tabOnCreatedListener=async e=>{try{handleRuntimeError(),await injectContentScripts(e.id),iconStateListener()}catch(e){logger.log("warn","tabs.onCreated",e.message)}},tabOnUpdatedListener=(e,t,n)=>{try{handleRuntimeError(),iconStateListener(),stylesTabsOnUpdatedHandler(t,n)}catch(e){logger.log("warn","tabs.onUpdated",e.message)}},initTabHandler=()=>{chrome.windows.onCreated.removeListener(iconStateListener),chrome.windows.onFocusChanged.removeListener(iconStateListener),chrome.tabs.onActivated.removeListener(tabOnActivatedListener),chrome.tabs.onCreated.removeListener(tabOnCreatedListener),chrome.tabs.onUpdated.removeListener(tabOnUpdatedListener),chrome.windows.onCreated.addListener(iconStateListener),chrome.windows.onFocusChanged.addListener(iconStateListener),chrome.tabs.onActivated.addListener(tabOnActivatedListener),chrome.tabs.onCreated.addListener(tabOnCreatedListener),chrome.tabs.onUpdated.addListener(tabOnUpdatedListener)};export{initTabHandler};