import{logger}from"../helpers.js";class Feathers{constructor(e){this.url=e,this.jwt=null,this.jti=null,this.onAuthenticatedHandler=()=>{}}setJWT(e){this.jwt=e,this.jti=JSON.parse(atob(e.split(".")[1])).jti,this.onAuthenticatedHandler()}removeJWT(){this.jwt=null}onAuthenticated(e){this.onAuthenticatedHandler=e}_sendRequest(e,t,s={}){var n=s?.headers||{};if(n["Content-Type"]="application/json",this.jwt&&(n.Authorization="Bearer "+this.jwt),s.body)try{s.body=JSON.stringify(s.body)}catch(e){throw new Error("Invalid JSON body!",e)}let r=this.url+"/"+e;return s.query&&(e=this._buildQuery(r,s.query),r=r+"?"+e,delete s?.query),logger.log("debug","feathers _sendRequest",{url:r,headers:n,method:t,params:s}),fetch(new URL(r),{headers:n,method:t,...s}).then(e=>e.json())}_buildQuery(e,t,s){let n="";for(var r in t){var i=t[r];r=s?`${s}[${r}]`:r,n.length&&(n+="&"),n+="object"==typeof i&&null!==i?this._buildQuery(e,i,r):r+"="+i}return n}service(e){return new FeathersService(e,this)}create(e,t,s){return this._sendRequest(e,"POST",{body:t,...s})}find(e,t){return this._sendRequest(e,"GET",t)}get(e,t,s){return this._sendRequest(e+"/"+t,"GET",s)}patch(e,t,s,n){return this._sendRequest(e+"/"+t,"PATCH",{body:s,...n})}remove(e,t,s){return this._sendRequest(e+"/"+t,"DELETE",s)}}class FeathersService{constructor(e,t){this.name=e,this.client=t,this.data={},this.event_key="__amino_service_event_"+this.name,this.hasEvents=!1,this.events={created:[],updated:[],patched:[],removed:[]}}on(e,t){return this.events[e].push(t),this.hasEvents||(chrome.storage.onChanged.addListener(async(e,t)=>{if("sync"===t&&e[this.event_key]){const{event:s,_id:n,key:r,jti:i}=JSON.parse(e[this.event_key].newValue);if(i!==this.client.jti){let t={};"removed"!=s&&(t=await this.get(n)),"removed"==s?this.events[s].forEach(e=>e(n,r)):this.events[s].forEach(e=>e(n,t))}}}),this.hasEvents=!0),this}_syncEvent(e,t){chrome.storage.sync.set({[""+this.event_key]:JSON.stringify({event:e,obj:t})})}async create(e,t){return this.client.create(this.name,e,t)}async find(e){return this.client.find(this.name,e)}async get(e,t){return this.client.get(this.name,e,t)}async patch(e,t,s){return this.client.patch(this.name,e,t,s)}async remove(e,t){return this.client.remove(this.name,e,t)}}export{Feathers};